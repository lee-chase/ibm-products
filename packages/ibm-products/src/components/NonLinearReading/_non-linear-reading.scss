//
// Copyright IBM Corp. 2023, 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

// Standard imports.
@import '../../global/styles/project-settings';

@keyframes fade {
  0% {
    opacity: 0;
  }

  15% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@mixin keyword-closed {
  height: rem(20px);
  padding-top: 0;
  // stylelint-disable-next-line carbon/layout-token-use
  padding-right: rem(3px);
  border-width: rem(1px);
  border-style: solid;
  border-color: $button-tertiary;
  border-radius: $spacing-04;
  background-color: transparent;
  color: $button-tertiary;
  white-space: nowrap;

  &:hover {
    border-color: $button-tertiary;
    background-color: $button-tertiary;
    color: $text-inverse;
  }

  &:focus {
    border-color: $text-inverse;
    background-color: $button-tertiary;
    box-shadow: 0 0 0 1px $text-inverse, 0 0 0 3px $button-tertiary;
    color: $text-inverse;
  }

  // Disable browser's default focus outline.
  // We will provide all the focus/outline styling.
  &:focus-visible {
    outline: none;
  }

  // The "up" chevron
  svg {
    // stylelint-disable-next-line carbon/layout-token-use
    margin: rem(1px) 0 0 0;
    vertical-align: text-top;
  }
}
@mixin keyword-open {
  @include keyword-closed();

  border-color: $button-tertiary;
  background-color: $button-tertiary;
  color: $text-inverse;

  &:hover {
    border-color: $button-tertiary;
    background-color: transparent;
    color: $button-tertiary;
  }

  &:focus {
    border-color: $text-inverse;
    background-color: transparent;
    box-shadow: inset 0 0 0 1px $button-tertiary, 0 0 0 1px $text-inverse,
      0 0 0 3px $button-tertiary;
    color: $button-tertiary;
  }

  // The "up" chevron, flipped
  svg {
    transform: rotate(180deg);
  }
}

@mixin body-defaults {
  @include carbon--type-style('body-long-01');

  display: block;
  padding: $spacing-03 $spacing-04;
  border-left: rem(1.25px) solid $text-01;
  margin: $spacing-02 0;
  // Novice to pro does not always use Carbon defaults/tokens
  // stylelint-disable-next-line carbon/motion-duration-use, carbon/motion-easing-use
  animation: fade 600ms;

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

// Other Carbon settings.
// TODO: @import 'carbon-components/scss/globals/grid/grid'; if needed

// NonLinearReading uses the following Carbon components:
// TODO: @import(s) of Carbon component styles used by NonLinearReading

// NonLinearReading uses the following Carbon for IBM Products components:
// TODO: @import(s) of IBM Products component styles used by NonLinearReading

// Define all component styles in a mixin which is then exported using
// the Carbon import-once mechanism.
@mixin non-linear-reading {
  // The block part of our conventional BEM class names (blockClass__E--M).
  $block-class: #{$pkg-prefix}--non-linear-reading;

  .#{$block-class}__light {
    .#{$block-class}__keyword {
      &-closed {
        @include keyword-closed();
      }

      // The body has an id that must be visible to the button's "aria-controls" property.
      // We *must* render the body with the id to avoid breaking accessibility.
      // When closed we render but don't display the body, and we don't render the "content".
      // When open, we display the body, and render the content.
      &-closed + .#{$block-class}__body {
        display: none;
      }

      &-open {
        @include keyword-open();
      }
    }

    .#{$block-class}__body {
      @include body-defaults();
    }
  }

  .#{$block-class}__dark {
    @include carbon--theme($carbon--theme--g100, true);

    .#{$block-class}__keyword {
      &-closed {
        @include keyword-closed();
      }

      &-closed + .#{$block-class}__body {
        display: none;
      }

      &-open {
        @include keyword-open();
      }
    }

    .#{$block-class}__body {
      @include body-defaults();

      color: $text-01;

      // override default link color to compensate for a gradient background.
      a {
        color: $link-01;
      }
    }
  }
}

@include exports('non-linear-reading') {
  @include non-linear-reading;
}
